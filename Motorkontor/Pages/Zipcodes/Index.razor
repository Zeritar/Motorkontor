@page "/zipcodes"

@inject ZipCodeService ZipCodeService

<h1>Postnumre</h1>
<button @onclick="() => ToggleDetailWindow(0)">Nyt Postnummer</button>
<div>
    @if (detailWindow)
            {
                <DetailWindow detailModel=@detailModel Title="Postnummer" OnCloseClickCallback="() => ToggleDetailWindow(0)" OnSaveClickCallback="() => GotSaved()"/>
            }
    @if (zipCodes == null)
    {
        <p><em>Henter...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    @foreach (var field in zipCodes[0].GetFields())
                {
                    <th>@field.Key.Text</th>
                }
                </tr>
            </thead>
            <tbody>
                @foreach (var zipCode in zipCodes)
                {
                <tr class="clickable" @onclick="() => ToggleDetailWindow(zipCode.zipCodeId)">
                    @foreach (var field in zipCode.GetFields())
                    {
                    <td>@field.Value</td>
                    }
                </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private ZipCode[] zipCodes;
    private bool detailWindow = false;
    private ZipCode detailModel;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => { zipCodes = ZipCodeService.GetZipCodes(); });
    }

    void ToggleDetailWindow(int id)
    {
        if (!detailWindow)
            if (id != 0)
                detailModel = zipCodes.Where(e => e.zipCodeId == id).FirstOrDefault();
            else
            {
                detailModel = new ZipCode();
            }

        else
            detailModel = null;
        detailWindow = !detailWindow;

    }

    public async Task GotSaved()
    {
        await Task.Run(() => {
            if (detailModel.zipCodeId == 0 && detailModel.hasChanged)
            {
                ZipCodeService.PostZipCode(detailModel);
            }
            if (detailModel.deleted)
            {
                ZipCodeService.DropZipCode(detailModel);
            }
            foreach (ZipCode zipCode in zipCodes)
            {
                if (zipCode.hasChanged)
                {
                    if (zipCode.zipCodeId == 0)
                    {
                        ZipCodeService.PostZipCode(zipCode);
                    }
                    else
                    {
                        ZipCodeService.UpdateZipCode(zipCode);
                    }

                }
            }
            zipCodes = ZipCodeService.GetZipCodes();
        });
        ToggleDetailWindow(0);
    }
}
