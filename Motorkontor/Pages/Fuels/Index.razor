@page "/fuels"

@inject FuelService FuelService

<h1>Brændstoffer</h1>
<button @onclick="() => ToggleDetailWindow(0)">Nyt Brændstof</button>
<div>
    @if (detailWindow)
    {
        <DetailWindow detailModel=@detailModel Title="Brændstof" OnCloseClickCallback="() => ToggleDetailWindow(0)" OnSaveClickCallback="() => GotSaved()" />
    }
    @if (fuels == null)
    {
        <p><em>Henter...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    @foreach (var field in fuels[0].GetFields())
                    {
                        <th>@field.Key.Text</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var fuel in fuels)
                {
                    <tr class="clickable" @onclick="() => ToggleDetailWindow(fuel.fuelId)">
                        @foreach (var field in fuel.GetFields())
                        {
                            <td>@field.Value</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private Fuel[] fuels;
    private bool detailWindow = false;
    private Fuel detailModel;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => { fuels = FuelService.GetFuels(); });
    }

    void ToggleDetailWindow(int id)
    {
        if (!detailWindow)
            if (id != 0)
                detailModel = fuels.Where(e => e.fuelId == id).FirstOrDefault();
            else
            {
                detailModel = new Fuel();
            }

        else
            detailModel = null;
        detailWindow = !detailWindow;

    }

    public async Task GotSaved()
    {
        await Task.Run(() =>
        {
            if (detailModel.fuelId == 0 && detailModel.hasChanged)
            {
                FuelService.PostFuel(detailModel);
            }
            if (detailModel.deleted)
            {
                FuelService.DropFuel(detailModel);
            }
            foreach (Fuel fuel in fuels)
            {
                if (fuel.hasChanged)
                {
                    if (fuel.fuelId == 0)
                    {
                        FuelService.PostFuel(fuel);
                    }
                    else
                    {
                        FuelService.UpdateFuel(fuel);
                    }

                }
            }
            fuels = FuelService.GetFuels();
        });
        ToggleDetailWindow(0);
    }
}
