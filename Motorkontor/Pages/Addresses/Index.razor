@page "/addresses"

@inject AddressService AddressService

<h1>Adresser</h1>
<button @onclick="TryInsertAddress">TryInsertAddress()</button>
<button @onclick="TryUpdateAddress">TryUpdateAddress()</button>
<button @onclick="TryDeleteAddress">TryDeleteAddress()</button>
<div>
    @if (addresses == null)
    {
        <p><em>Henter...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Adresse ID</th>
                    <th>Vejnavn og nummer</th>
                    <th>Postnummer</th>
                    <th>By</th>
                    <th>Dato Oprettet</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var address in addresses)
                {
                <tr>
                    <td>@address.addressId</td>
                    <td>@address.streetAndNo</td>
                    <td>@address.zipCode.zipCodeName</td>
                    <td>@address.zipCode.cityName</td>
                    <td>@address.createDate.ToShortDateString()</td>
                </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private Address[] addresses;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => { addresses = AddressService.GetAddresses(); });
    }

    void TryInsertAddress()
    {
        Address address = new Address()
        {
            streetAndNo = "Nygade 42",
            zipCode = addresses[1].zipCode
        };
        if (AddressService.PostAddress(address))
        {
            addresses = AddressService.GetAddresses();
        }
    }

    void TryUpdateAddress()
    {
        if (addresses == null)
            return;

        Address address = addresses[1];
        address.streetAndNo = "Bagværksvej 102";
        if (AddressService.UpdateAddress(address))
        {
            addresses = AddressService.GetAddresses();
        }
    }

    void TryDeleteAddress()
    {
        if (addresses == null || addresses.Length < 4)
            return;

        Address address = addresses[3];
        if (AddressService.DropAddress(address))
        {
            addresses = AddressService.GetAddresses();
        }
    }
}
