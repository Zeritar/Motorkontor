@page "/addresses"

@inject AddressService AddressService

<h1>Adresser</h1>
<button @onclick="() => ToggleDetailWindow(0)">Ny Adresse</button>
<div>
    @if (detailWindow)
    {
        <DetailWindow detailModel=@detailModel Title="Adresse" OnCloseClickCallback="() => ToggleDetailWindow(0)" OnSaveClickCallback="() => GotSaved()" />
    }
    @if (addresses == null)
    {
        <p><em>Henter...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    @foreach (var field in addresses[0].GetFields())
                    {
                        <th>@field.Key.Text</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var address in addresses)
                {
                    <tr class="clickable" @onclick="() => ToggleDetailWindow(address.addressId)">
                        @foreach (var field in address.GetFields())
                        {
                            <td>@field.Value</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private Address[] addresses;
    private bool detailWindow = false;
    private Address detailModel;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => { addresses = AddressService.GetAddresses(); });
    }

    void ToggleDetailWindow(int id)
    {
        if (!detailWindow)
            if (id != 0)
                detailModel = addresses.Where(e => e.addressId == id).FirstOrDefault();
            else
            {
                detailModel = new Address();
            }

        else
            detailModel = null;
        detailWindow = !detailWindow;

    }

    public async Task GotSaved()
    {
        await Task.Run(() =>
        {
            if (detailModel.addressId == 0 && detailModel.hasChanged)
            {
                AddressService.PostAddress(detailModel);
            }
            if (detailModel.deleted)
            {
                AddressService.DropAddress(detailModel);
            }
            foreach (Address address in addresses)
            {
                if (address.hasChanged)
                {
                    if (address.addressId == 0)
                    {
                        AddressService.PostAddress(address);
                    }
                    else
                    {
                        AddressService.UpdateAddress(address);
                    }

                }
            }
            addresses = AddressService.GetAddresses();
        });
        ToggleDetailWindow(0);
    }
}
